create table Trains (
		TrainNo int unsigned not null,
		TrainName char(50) not null default 'train'
		primary key (TrainNo)
		);

create table Coaches (
		CoachCode int unsigned not null,
		CostPerKm decimal(5,2) default 0,
		primary key (TrainNo)
		);

create table Stations ( 
		StationId int unsigned not null, 
		StationCode char(5) not null, 
		primary key (StationID) 
		);

create table Routes ( 
		RouteId int unsigned not null, 
		OriginStationId int unsigned not null,  
		DestinationStationId int unsigned not null, 
		DistanceInKms decimal(8.2), 
		primary key (RouteId), 
		Foreign key (OriginStationId) references Stations (StationId) on update cascade on delete cascade, 
		Foreign key (DestinationStationId) references Stations (StationId) on update cascade on delete cascade 
		);

create table TrainRouteMaps ( 
		RouteId int unsigned not null, 
		TrainNo int unsigned not null, 
		ArrivalTime TIME, 
		DepartureTime TIME,  
		DurationInMins int unsigned, 
		primary key (RouteId, TrainNo), 
		foreign key (RouteId) references Routes (RouteId), 
		foreign key (TrainNo) references Trains (TrainNo) 
		);

create table TrainCoaches (
		TrainNo int unsigned,
		CoachCode int unsigned,
		NoOfSeats int unsigned,
		foreign key (TrainNo) references Trains (TrainNo),
		foreign key (CoachCode) references Coaches (CoachCode)
		);

create table Bookings ( 
		BookingRefNo int unsigned not null auto_increment, 
		RouteId int unsigned,  
		TrainNo int unsigned,  
		CoachCode int unsigned, 
		DateOfJourney date not null, 
		DateOfBooking date, 
		NoOfTickets int unsigned, 
		primary key (BookingRefNo), 
		foreign key (RouteId) references TrainRouteMaps (RouteId), 
		foreign key (TrainNo) references TrainRouteMaps (TrainNo), 
		foreign key (CoachCode) references Coaches (CoachCode) 
		);

create table Users (
		UserId int unsigned not null,
		LoginId int unsigned not null,
		LPassword varchar(20) not null,
		primary key (UserId)
		);

***************************************************************************************************************************
QUERIES

1->	select TrainName from Trains;

All Routes
2->	select RouteId, st1.StationCode as OriginStation, st2.StationCode as DestinationStation from
	( Routes join stations as st1 on originStationId = StationId)
	join 
	stations as st2 on DestinationStationID= st2.StationID;

3->	select TrainNo, sum(NoOfSeats) as TotalNoOfSeats from TrainCoaches group by TrainNo;

4->	select RouteId, st1.StationCode as OriginStation, st2.StationCode as DestinationStation from
	( Routes join stations as st1 on originStationId = StationId)
	join 
	stations as st2 on DestinationStationID= st2.StationID
	where
		st2.StationCode like "mas";

5-> select RouteId, st1.StationCode as OriginStation, st2.StationCode as DestinationStation from
	( Routes join stations as st1 on originStationId = StationId)
	join 
	stations as st2 on DestinationStationID= st2.StationID
	where
		st1.StationCode like "mas" or
		st1.StationCode like "cbe" or
		st1.StationCode like "alp";

6->	select * from bookings where DateOfBooking between 20141201 and 20150428;

7->	select TrainName from Trains where TrainName like "A%";

8-> select * from bookings where DateOfBooking is not null;

9->	select * from bookings 
	where 
		year(DateOfBooking)= 2014 and 
		year(DateOfJourney)=2015;

10->select TrainCoaches.TrainNo, TrainName, count(CoachCode) as TotalNoOfCoaches from 
	TrainCoaches join Trains on TrainCoaches.TrainNo =  Trains.TrainNo
	group by TrainCoaches.TrainNo;
	
10->select count(NoOfSeats) as TotalNoOfCoaches from TrainCoaches;

11->select TrainNo, count(BookingRefNo) as TotalNoOfBookings from bookings group by TrainNo having TrainNo= 10001;

12->select sum(NoOfTickets) as Total from bookings group by TrainNo having TrainNo=10002;

13->select RouteId, st1.StationCode as OriginStation, st2.StationCode as DestinationStation, min(DistanceInKms) from
	( Routes join stations as st1 on originStationId = StationId)
	join 
	stations as st2 on DestinationStationID= st2.StationID;

14->select TrainName, sum(NoOfTickets) as Total from  bookings left outer join trains
	On
		bookings.TrainNo= trains.TrainNo
	group by bookings.TrainNo;

15->select CoachCode, CostPerKm*50 from coaches;

16->select TrainName, DepartureTime from 
	(((TrainRouteMaps join Trains on TrainRouteMaps.TrainNo =Trains.TrainNo) join
		Routes on TrainRouteMaps.RouteId = Routes.RouteId) join
			Stations on Routes.OriginStationId= Stations.StationId)
	where
		StationCode like "mas";

17->select TrainName, sum(NoOfTickets) as Total from  bookings left outer join trains
	On
		bookings.TrainNo= trains.TrainNo
	group by bookings.TrainNo
	having Total > 10;

18->select TrainName, sum(NoOfTickets) as Total from  bookings left outer join trains
	On
		bookings.TrainNo= trains.TrainNo
	group by bookings.TrainNo
	having Total < 10;

19->select TrainName, st1.StationCode as OriginStation, st2.StationCode as DestStation, b1.CoachCode from
	(bookings as b1 join trains as t1 on b1.TrainNo=t1.TrainNo) join
		((routes as r1 join stations as st1 on r1.OriginStationId = st1.StationId) join
			stations as st2 on r1.DestinationStationId= st2. StationId)
	on 
		b1.RouteId =  r1.RouteId
	where
		b1.DateOfJourney > 20150901;

20->select T1.TrainNo, TrainName, st1.StationCode as Source, st2.StationCode as Destination from 
	(TrainRouteMaps as tr1 join Trains as t1 on tr1.TrainNo =t1.TrainNo) join
		((routes as r1 join stations as st1 on r1.OriginStationId = st1.StationId) join
			stations as st2 on r1.DestinationStationId= st2. StationId)
	on tr1.RouteId=r1.RouteId
	where 
		(st1.StationCode like "mas" or st1.StationCode like "cbe") and
		(st2.StationCode like "mas" or st2.StationCode like "cbe");

21->select * from trains where TrainNo in (select distinct TrainNo from bookings);
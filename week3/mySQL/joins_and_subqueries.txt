Marks join students:
1->select distinct name from marks join students
  on
    marks.student_id = students.id
  where 
        annual is null;

2->select student_id, subject_id, year from marks join students
  on
    marks.student_id = students.id
  where
      annual is null and 
      year = 2005;

3->select students.name, marks.subject_id, marks.year from marks join students 
    on 
      marks.student_id = students.id
    where
      not(annual is null and half_yearly is null and quarterly is null);

4->select students.name, marks.subject_id, year, quarterly, half_yearly, annual
   from marks join students 
    on 
      marks.student_id = students.id and 
    where
      quarterly > 90 and annual > 90 and half_yearly > 90;
      

5->select students.name, marks.subject_id, 
  (
    (ifnull(quarterly,0) + ifnull(half_yearly,0)+ ifnull(annual,0) )/ 3
  ) as average , year
    from marks join students 
    on 
      marks.student_id = students.id;
    

6->select students.name, marks.subject_id, 
  (
    (ifnull(quarterly,0) + ifnull(half_yearly,0)+ ifnull(annual,0) )/ 3
  ) as average , year
    from marks join students 
    on 
      marks.student_id = students.id
    where
      year in (2003,2004);

Advanced:
1->select students.name, year from marks right outer join students 
    on
      marks.student_id = students.id
    group by
      students.id, year
    having
      count(marks.annual)=0 and count(marks.quarterly)=0 and count(marks.half_yearly)=0;

2->select students.name, ifnull(sum(annual),0), marks.year from marks right outer join students 
    on 
        marks.student_id = students.id
    group by
      students.id, year;

3->select name, sum(quarterly) as total, grade from students left outer join marks
    on
      marks.student_id = students.id 
    where
      year = 2003
    group by
      students.id, year;
      
4->select name, grade, count(medal_won) as no_of_medals from students join medals
    On
      students.id = medals.student_id
    where
      grade in (9,10)
    group by 
      medals.student_id, grade
    having no_of_medals > 3;

5->select name, marks.grade, count(medal_won) as no_of_medals from (students left outer join medals 
    on 
      students.id = medals.student_id)
    join marks
    on
      students.id = marks.student_id
    group by 
      students.id
    having no_of_medals < 2;

6->select distinct name, marks.year from students left join medals
  on
    students.id= medals.student_id
  join marks
  on
    students.id = marks.student_id
  where
    medals.id is null and
    marks.annual >90
  group by
    marks.year, marks.student_id
  having
    count(subject_id) = 5;

7->select distinct name, game_id, grade, year from medals left outer join students 
    on 
      medals.student_id = students.id
    where 
      medals.student_id in 
            (select student_id from medals 
            group by 
              student_id
            having 
              count(medal_won) > 3);

8->select students.id, name, avg(quarterly), avg(half_yearly),avg(annual), count(medal_won), marks.year  
from students 
left outer join marks on students.id= marks.student_id
left outer join medals on students.id= medals.student_id and marks.year= medals.year
    where 
      subject_id=1
    group by
      students.id, marks.year;

 9->select name, year, grade, 
      getRating(sum(quarterly)) as quarterly_rating, 
      getRating(sum(half_yearly)) as half_yearly_rating,
      getRating(sum(annual)) as annual_rating 
  from marks join students 
  on
    marks.student_id=students.id
  group by 
    year, student_id
  order by
    year, name;

*****************************************************************************************************************************

delimiter $$
create function getRating (mark int)
returns char(1)
begin
  declare markRate char(1);
  if mark >= 450 and mark <= 500 then
    set markRate= 'S';
  elseif mark >=400 and mark< 450 then
    set markRate= 'A';
  elseif mark >=350 and mark< 400 then
    set markRate= 'B';
  elseif mark >=300 and mark< 350 then
    set markRate= 'C';
  elseif mark >=250 and mark< 300 then
    set markRate= 'D';
  elseif mark >=200 and mark< 250 then
    set markRate= 'E';
  else
    set markRate= 'F';
  end if;
  return markRate;
end $$

delimiter ;
